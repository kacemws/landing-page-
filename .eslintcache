[{"C:\\DevMobile\\Neo\\landing-page\\src\\index.js":"1","C:\\DevMobile\\Neo\\landing-page\\src\\App.js":"2","C:\\DevMobile\\Neo\\landing-page\\src\\reportWebVitals.js":"3","C:\\DevMobile\\Neo\\landing-page\\src\\Views\\Signin.js":"4","C:\\DevMobile\\Neo\\landing-page\\src\\Components\\image.js":"5"},{"size":478,"mtime":1609353748105,"results":"6","hashOfConfig":"7"},{"size":607,"mtime":1609358945478,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4071,"mtime":1609362442795,"results":"10","hashOfConfig":"7"},{"size":304,"mtime":1609356358373,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1aetgac",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\DevMobile\\Neo\\landing-page\\src\\index.js",[],["25","26"],"C:\\DevMobile\\Neo\\landing-page\\src\\App.js",[],"C:\\DevMobile\\Neo\\landing-page\\src\\reportWebVitals.js",[],"C:\\DevMobile\\Neo\\landing-page\\src\\Views\\Signin.js",["27"],"import React, { useState } from \"react\";\r\nimport \"../Style/Views/Signin.scss\";\r\nimport LandingImage from \"../Components/image\";\r\nimport logo from \"../Assets/neo.png\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function Signin() {\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setError } = useForm({\r\n    mode: \"onBlur\",\r\n  }); //settings for react hook form\r\n\r\n  const [innerLoading, setInnerLoading] = useState(false); // to know wheter we are fetching data or not\r\n  const onSubmit = (data) => {\r\n    if (!innerLoading) {\r\n      setInnerLoading(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <div className=\"container\">\r\n        <div className=\"left-part\">\r\n          <div className=\"content\">\r\n            <LandingImage />\r\n          </div>\r\n        </div>\r\n        <div className=\"right-part\">\r\n          <div className=\"right-part-inner\">\r\n            {/*Header*/}\r\n            <header>\r\n              <img className=\"logo\" src={logo} alt=\"neo's logo\" />\r\n            </header>\r\n            {/*Header*/}\r\n\r\n            {/*Title*/}\r\n            <div className=\"greetings\">\r\n              <h1>Bienvenu à NEO</h1>\r\n              <h3>\r\n                Nouveau?{\" \"}\r\n                <span\r\n                  className=\"highlited\"\r\n                  onClick={(_) => {\r\n                    if (!innerLoading) history.push(\"sign-up\");\r\n                  }}\r\n                >\r\n                  S'inscrire\r\n                </span>\r\n              </h3>\r\n            </div>\r\n            {/*Title*/}\r\n\r\n            {/*Form*/}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              {/*Username field*/}\r\n              <div className=\"input-container\">\r\n                <label className=\"label\" htmlFor=\"username\">\r\n                  Nom d'utilisateur\r\n                </label>\r\n                <input\r\n                  className=\"input\"\r\n                  style={{\r\n                    borderColor: errors.username && \"red\",\r\n                  }}\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  ref={register({\r\n                    required: true,\r\n                    maxLength: 20,\r\n                  })}\r\n                />\r\n                {errors.username && (\r\n                  <div className=\"error\">\r\n                    {errors.username.type === \"manual\"\r\n                      ? errors.username.message\r\n                      : \"Veuillez introduire une valeur valide\"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/*Username field*/}\r\n\r\n              {/*Password field*/}\r\n              <div className=\"input-container\">\r\n                <label className=\"label\" htmlFor=\"password\">\r\n                  <div>Mot de passe</div>\r\n                  <div className=\"forgot-password\">Mot de passe oublié?</div>\r\n                </label>\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  ref={register({\r\n                    required: true,\r\n                    minLength: 8,\r\n                  })}\r\n                  style={{\r\n                    borderColor: errors.password && \"red\",\r\n                  }}\r\n                />\r\n                {errors.password && (\r\n                  <div className=\"error\">\r\n                    Veuillez introduire une valeur valide\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/*Password field*/}\r\n\r\n              <div className=\"button\">\r\n                <button className=\"submit-button\" type=\"submit\">\r\n                  Se connecter\r\n                </button>\r\n                {innerLoading && (\r\n                  <div className=\"overlay\">\r\n                    <div className=\"spinner\"></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </form>\r\n            {/*Form*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\DevMobile\\Neo\\landing-page\\src\\Components\\image.js",["28"],"import React from \"react\";\r\nimport landingImage from \"../Assets/landing-image.svg\";\r\nexport default function LandingImage() {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={landingImage}\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":10,"column":43,"nodeType":"35","messageId":"36","endLine":10,"endColumn":51},{"ruleId":"37","severity":1,"message":"38","line":6,"column":7,"nodeType":"39","endLine":12,"endColumn":9},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]